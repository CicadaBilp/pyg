<style lang="less">


.swiper,
.swiper-img {
  width: 750rpx;
  height: 720rpx;
}

.product-info {
  height: 300rpx;
  background-color: #fff;
  padding: 0 16rpx;
}
.product-head {
  height: 80rpx;
  .price {
    color: #ff2d4a;
    font-size: 50rpx;
    margin-left: -10rpx;
  }
  .old-price {
    color: #999;
    font-size: 26rpx;
  }
}
.product-body {
  display: flex;
  align-items: center;
  justify-content: space-between;
  .product-name {
    font-size: 34rpx;
    width: 546rpx;
    height: 88rpx;
    line-height: 1.3;
    /* 多行文字隐藏省略号 */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .product-like {
    width: 50rpx;
    height: 78rpx;
    border-left: 1rpx solid #ddd;
    padding-left: 46rpx;
    margin-right: 30rpx;
    color: #999;
    font-size:24rpx;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
  }
  .icon-shoucang {
    width: 32rpx;
    height: 32rpx;
    margin-top: 10rpx;
    font-size:30rpx;
  }
}

.product-foot {
  font-size: 30rpx;
  color: #999;
  margin-top: 34rpx;
}

.part {
  background-color: #fff;
  margin: 20rpx 0;
  font-size: 32rpx;
  color: #999;

  .part-line {
    overflow: hidden;
  }

  &-item {
    display: flex;
    padding: 28rpx 16rpx;
    position: relative;
    align-items: center;
  }

  &-line:after {
    content: '';
    height: 1rpx;
    width: 734rpx;
    background-color: #ddd;
    display: block;
    position: absolute;
    bottom: -1rpx;
  }
  .note {
    color: #333;
    margin-right: 40rpx;
  }
  .description {
    width: 490rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
  }
  .icon-jiantouyou {
    width: 25rpx;
    height: 25rpx;
    color: #ccc;
    position: absolute;
    right: 46rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.tabs-head {
  height: 100rpx;
  background-color: #fff;
  display: flex;
}
.tabs-head .tabs-item {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30rpx;
  position: relative;
}
.tabs-head .active {
  color: #ff2d4a;
  font-weight: 400;
}
.tabs-head .active:after {
  content: '';
  height: 12rpx;
  width: 100%;
  background-color: #ff2d4a;
  position: absolute;
  left: 0;
  bottom: 0;
}
.tabs-body {
  padding: 16rpx;
  padding-bottom: 250rpx;

  .introduce {
    text-align: center;
  }
}
.param-item {
  padding: 30rpx 0;
  font-size: 28rpx;
  display: flex;
  align-items: center;
}
.param-item .note {
  width: 150rpx;
  color: #999;
}
.param-item .description {
  width: 568rpx;
  line-height: 1.3;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.fixed-bar .item {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.fixed-bar .item .iconfont {
  width: 40rpx;
  height: 40rpx;
  font-size: 40rpx;
  color: #999;
}

.fixed-bar .item .item-note {
  margin-top: 10rpx;
  font-size: 22rpx;
  color: #666;
}
.fixed-bar .btn-group {
  display: flex;
}
.fixed-bar .btn {
  width: 213rpx;
  height: 98rpx;
  line-height: 98rpx;
  text-align: center;
  font-size: 30rpx;
  color: #fff;
}
.yellow-button {
  background-color: #ffb400;
}
.red-button {
  background-color: #ff2d4a;
}

.wxParse-content {
  padding: 55rpx;

  .wxParse-a {
    display: none;
  }
  .wxParse-div {
    display: flex;
    justify-content: center;
  }
}
.contact-btn {
  opacity: 0;
  position: absolute;
  width: 100%;
  height: 100%;
}
.fixed-bar .item {
  position: relative;
}
</style>
<template>

  <!-- 商品详情轮播图 -->
  <swiper class="swiper" indicator-dots="{{ true }}" indicator-color="rgba(255,255,255,.5)" indicator-active-color="#ffffff" interval="2500" autoplay="true" circular="true">
    <block wx:for="{{detail.pics}}" wx:key="{{item.pics_id}}">
      <swiper-item>
        <image class="swiper-img" src="{{item.pics_big}}" />
      </swiper-item>
    </block>
  </swiper>
  <!-- 商品信息 -->
  <view class="product-info">
    <view class="product-head">
      <text class="price">￥ {{detail.goods_price}}</text>
    </view>
    <view class="product-body">
      <view class="product-name">{{detail.goods_name}}</view>
      <view class="product-like">
        <view class="iconfont icon-shoucang"></view>
        <view>收藏</view>
      </view>
    </view>
    <view class="product-foot">
      快递：<text>免运费</text>
    </view>
  </view>
  <view class="part">
    <view class="part-item part-line">
      <text class="note">促销</text><text class="description color-main">满300减30元</text>
    </view>
    <view class="part-item">
      <text class="note">已选</text><text class="description">黑色/S/1件</text>
    </view>
  </view>
  <view class="part">
    <!-- 地址 -->
    <view class="part-item">
      <text class="note">送至</text>
      <text class="description" @tap="chooseAddress">{{address}}</text>
      <view class="iconfont icon-jiantouyou"></view>
    </view>
    <!-- </Address> -->
  </view>
  <!-- 商品tab栏,切换图文信息和参数选项 -->
  <view class="tabs">
    <view class="tabs-head">
      <block>
        <view @tap="toggleTab(1)" class="tabs-item {{tabId === 1 ? 'active' : ''}}">图文详情</view>
        <view @tap="toggleTab(2)" class="tabs-item {{tabId === 2 ? 'active' : ''}}">规格参数</view>
      </block>
    </view>
    <!-- tab栏主体 -->
    <view class="tabs-body">
      <view class="tabs-content introduce" hidden="{{tabId != 1}}">
          <import src="../wxParse/wxParse.wxml"/>
          <!-- 这里data中article为bindName -->
          <template is="wxParse" data="{{wxParseData:article.nodes}}"/>
      </view>

      <view class="tabs-content" hidden="{{tabId != 2}}">
      
          <view class="param-item">
            <text class="note">商品名称</text>
            <text class="description">{{detail.goods_name}}</text>
          </view>
          <!-- <view class="param-item">
            <text class="note">品牌</text>
            <text class="description">初羽</text>
          </view> -->
          <!-- <view class="param-item">
            <text class="note">编号</text>
            <text class="description">8R1005</text>
          </view> -->
          <view class="param-item">
            <text class="note">颜色</text>
            <text class="description">黑色/白色/灰色</text>
          </view>

      </view>
    </view>
  </view>

  <view class="fixed-bar">
    <view class="item">
      <!-- 9.0.1 客服按钮添加  open-type="contact" -->
      <button open-type="contact" class="contact-btn">客服按钮</button>
      <view class="iconfont icon-kefu"></view>
      <text class="item-note">联系客服</text>
    </view>
    <!-- 10.0.1 事件绑定，通过事件方式，实现购物车 tabBar 跳转 -->
    <view class="item" @tap="gotoCart">
      <view class="iconfont icon-gouwuche"></view>
      <text class="item-note">购物车</text>
    </view>
    <view class="btn-group">
      <view class="btn yellow-button" @tap="addCart" >加入购物车</view>
      <view class="btn red-button">立即购买</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import fetch from '../utils/fetch'
import WxParse from '../wxParse/wxParse.js'

// 首字母大写
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '品优购',
    navigationBarBackgroundColor: '#ff2d4a',
    navigationBarTextStyle: 'white'
  }
  data={
    detail:{},
    address:'请选择收货地址',
    //详情和参数的切换
    tabId:1
  }
  methods={
    //点击选择送货地址
    async chooseAddress(){
       let res = await wepy.chooseAddress()
       console.log(res);
       this.address = `${res.provinceName}${res.cityName}${res.countyName}${res.detailInfo}`
       this.$apply()
       //将地址缓存在本地
       wepy.setStorageSync('address',res)
    },
    //点击切换商品详情或参数
    toggleTab(tabid){
      this.tabId = parseInt(tabid)
    },
    //添加商品到购物车
    addCart(){
      //如果已经添加到购物车就把数量加1
      let {goods_id,goods_name,goods_price,goods_small_logo} = this.detail
      let cart = wepy.getStorageSync('cart') || []
      //查找当前商品在不在购物车
      let good = cart.find(item => item.goods_id === goods_id)
      if(good){
        good.goods_num++
      }else{
        //不再购物车,新添加
        cart.push({
          goods_id,
          goods_name,
          goods_price,
          goods_small_logo,
          goods_num:1,
          isChecked:true
        })
      }
      //再存入本地
      wepy.setStorageSync('cart',cart)
      wepy.showToast({title:'加入购物车成功'})
    },
    //点击购物车图标跳转到购物车页面
    gotoCart(){
      //此方法用于跳转到在tabbar中配置好的页面
      wepy.switchTab({
        url:'/pages/cart'
      })
    }
  }
  //页面加载
  onLoad(option){
      this.getDetail(option.goods_id)
      //页面加载时取出缓存的地址数据
      let ret = wepy.getStorageSync('address')
      if(ret){
        this.address = `${ret.provinceName}${ret.cityName}${ret.countyName}${ret.detailInfo}`
      }
      
  }
  //获取指定商品的详情数据
  async getDetail(id){
    let res = await fetch({
      url:'/goods/detail',
      data:{
        goods_id:id
      }
    })
    console.log(res)
    this.detail = res.data.data
    this.$apply()
    //将返回的图文详情部分html代码转为wxml,调用插件的方法
    WxParse.wxParse('article','html',this.detail.goods_introduce,this,0)
  }
  wxParseImgLoad(){}
  wxParseImgTap(){}
  
  

}
</script>
