<template>
  <view class="cart-list">
    <view class="shop-head">
      <view class="shop-head-info">
        <view class="iconfont icon-shop flex-center icon-dianpu"></view>
        <text class="shop-name">优购生活馆</text>
      </view>
    </view>

    <block wx:for="{{cart}}" wx:key="{{item.goods_id}}">
      <view class="product-item">
        <!-- 5.0.1 商品选择状态切换 -->
        <view class="iconfont-tap icon-xuanze {{item.isChecked ? 'icon-xuanze-fill' : ''}}" 
        @tap="toggleChecked({{item.goods_id}})"></view>
        <!-- 1.0.5 列表渲染，商品详情页 url 拼接 -->
        <navigator url="/pages/goods_detail?goods_id={{item.goods_id}}" class="product-left">
          <image class="product-img" src="{{item.goods_small_logo}}" />
        </navigator>
        <view class="product-right">
          <!-- 1.0.5 列表渲染，商品详情页 url 拼接 -->
          <navigator url="/pages/goods_detail?goods_id={{item.goods_id}}" class="product-name">
            {{item.goods_name}}
          </navigator>
          <view class="product-detail">
          </view>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">{{item.goods_price}}</text>
            <text class="product-price-decimal">.00</text>
          </view>
          <view class="product-count-eidt">
            <view class="count-min {{item.goods_num === 1 ? 'disabled' : ''}}" 
            @tap="changeNum({{item.goods_id}},{{-1}})">-</view>
            <input class="count-number" type="number" value="{{item.goods_num}}" />
            <view class="count-add" @tap="changeNum({{item.goods_id}},{{1}})">+</view>
          </view>
        </view>
      </view>
    </block>
  </view>
  <view class="bottom-space"></view>
  <view class="fixed-bar">
    <view class="iconfont-tap icon-xuanze {{isAllChecked ? 'icon-xuanze-fill': ''}}" @tap="AllChecked"></view>
    <text class="select-all">全选</text>
    <view class="total">
      <view class="total">
        <view class="total-body">
          <view class="total-note">合计：</view>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">{{totalPrice}}</text>
            <text class="product-price-decimal">.00</text>
          </view>
        </view>
        <view class="total-foot">包含运费</view>
      </view>
    </view>
    <view url="/pages/cart_order" class="buy-button {{totalCount<1 ? 'disable' : ''}}"
    @tap="gotoBuy">
      结算({{totalCount}})
    </view>
  </view>
  <!--
    <view class="cart-empty">
      <view class="cart-empty-txt">购物车为空</view>
      <navigator class="cart-empty-nav" url="/pages/index" open-type="switchTab" >点我，返回首页逛一下</navigator>
    </view>
    -->
</template>
<script>
import wepy from 'wepy'

export default class Cart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车',
    navigationBarBackgroundColor: '#ff2d4a',
    navigationBarTextStyle: 'white'
  }
  data={
    cart:[]
  }
  //watch监听cart数据的变化,每次变化后就同步更新到本地缓存
  watch={
    cart(res){
      wepy.setStorageSync('cart',res)
    }
  }
  methods={
    //点击选框图标切换商品的选中状态
    toggleChecked(id){
      
      //修改cart中对应商品的选中状态
      let good = this.cart.find(item => item.goods_id === id)
      //console.log(good);
      good.isChecked = !good.isChecked
      //修改本地缓存中对应商品的选中状态
      //wepy.setStorageSync('cart',this.cart)
    },
    //点击+或-修改商品添加数量
    async changeNum(id,num){
      let good = this.cart.find(item => item.goods_id === id)
      //判断该商品在购物车的数量是否为1同时点击的是 - 
      if(good.goods_num === 1 && num < 0){
        //当用户点击了 - 并且该商品在购物只有当前一件时,弹窗询问用户是否要删除该商品
        let res = await wepy.showModal({
          title:'提示信息',
          content:'您确定要删除该商品吗?'
        })
        if(res.confirm){
          //如果收到确定就在购物车删除该商品,在cart过滤出非当前商品重新赋值给cart
          this.cart = this.cart.filter(item => item.goods_id != id)
          this.$apply()
          //wepy.setStorageSync('cart',this.cart)
        }
        return 
      }
      good.goods_num += num
      wepy.setStorageSync('cart',this.cart)
    },
    //点击全选按钮,将所有商品状态改为选中
    AllChecked(){
      this.cart.forEach(item => item.isChecked = true);
      //wepy.setStorageSync('cart',this.cart)
    },
    //判断结算商品总数,小于1不能跳转,>= 1跳转到支付页面
    gotoBuy(){
      if(this.totalCount >= 1){
        wepy.navigateTo({
          url:'/pages/cart_order'
        })
      }
    }
  }
  computed={
    //选中商品的总数量
    totalCount(){
      let total = 0
      this.cart.forEach(item => {
        if(item.isChecked){
          total += item.goods_num
        }
      })
      
      return total
    },
    //选中商品的总价格
    totalPrice(){
      let total = 0
      this.cart.forEach(item => {
        if(item.isChecked){
          total += item.goods_num * item.goods_price
        }
      })
      return total
    },
    //当购物车中的商品都选中时全选框也选中
    isAllChecked(){
      return this.cart.every(item => item.isChecked)
    }
  }
  onLoad(){
    //this.cart = wepy.getStorageSync('cart') || []
    
  }
  //购物车页面一旦显示就去缓存中获取数据赋值给cart进行渲染
  onShow(){
    this.cart = wepy.getStorageSync('cart') || []
    //console.log(this.cart);
  }
  
}
</script>

<style lang="less">
page {
  height: 100%;
}
.address-info {
  height: 222rpx;
  position: relative;
  background-color: #fff;
}
.address-info .item {
  padding: 22rpx 16rpx;
  display: flex;
  flex-wrap: wrap;
  font-size: 32rpx;
  line-height: 1.3;
}

.address-info .item .col {
  display: flex;
  align-items: center;
}
.address-info .item .note {
  width: 160rpx;
}
.address-info .item .detail {
  max-width: 480rpx;
}
.address-info .item .address-phone {
  margin-right: 82rpx;
}
.address-info .item .icon-jiantouyou {
  position: absolute;
  right: 0;
}
.address-info .item .icon-jiantouyou:before {
  font-size: 24rpx;
  color: #999;
  line-height: 1;
  width: 15rpx;
  height: 25rpx;
}
.address-border {
  width: 100%;
  height: 15rpx;
}

.cart-list {
  background-color: #fff;
}
.shop-head {
  height: 88rpx;
  display: flex;
  align-items: center;
  border-bottom: 1rpx solid #ddd;
  position: relative;
  padding: 0 88rpx;
  // 屏蔽店铺全选后，把左内边距减少
  padding-left: 30rpx;
}
.shop-head-info {
  display: flex;
  font-size: 32rpx;
  align-items: center;
}
.shop-head-info .shop-name {
  margin-left: 10rpx;
}
.icon-xuanze,
.icon-xuanze-fill {
  position: absolute;
  left: 0;
}
.icon-xuanze:before,
.icon-xuanze-fill:before {
  width: 32rpx;
  height: 32rpx;
}
.icon-xuanze {
  color: #ccc;
}
.icon-xuanze-fill {
  color: #ff2d4a;
}
.icon-dianpu {
  color: #999;
}

.shop-head .icon-bianji {
  position: absolute;
  right: 0;
}

.shop-head .icon-bianji:before {
  width: 32rpx;
  height: 32rpx;
  color: #999;
}

.product-item {
  display: flex;
  padding: 30rpx 20rpx 30rpx 0;
  margin-left: 20rpx;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  align-items: center;
  position: relative;
}

.product-left {
  width: 200rpx;
  height: 200rpx;
  background-color: #eee;
  margin-right: 26rpx;
}
.product-left .product-img {
  width: 200rpx;
  height: 200rpx;
}
.product-right {
  width: 480rpx;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
}
.product-name {
  height: 84rpx;
  font-size: 30rpx;
  line-height: 1.4;
  /* 多行文字隐藏省略号 */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.product-price {
  color: #ff2d4a;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 28rpx;
}
.product-price-integer {
  font-size: 44rpx;
}

.cart-list .product-item {
  display: flex;
  padding: 20rpx 16rpx 20rpx 0;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  margin-left: 88rpx;
}

.product-left {
  margin-right: 20rpx;
}

.product-left,
.product-left .product-img {
  width: 160rpx;
  height: 160rpx;
}
.product-right {
  width: 464rpx;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 24rpx;
}
.product-price-integer {
  font-size: 34rpx;
}

.product-item .icon-xuanze,
.product-item .icon-xuanze-fill {
  left: -88rpx;
}

.product-detail {
  font-size: 24rpx;
  line-height: 1.25;
  color: #999;
  margin: 20rpx 0 30rpx;
}
.product-count {
  position: absolute;
  right: 0;
  bottom: 0;
  letter-spacing: 2rpx;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  padding: 18rpx 250rpx 18rpx 88rpx;
  box-sizing: border-box;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .icon-xuanze {
    padding-right: 60rpx;
  }
}
.buy-button {
  width: 230rpx;
  height: 98rpx;
  line-height: 98rpx;
  font-size: 30rpx;
  background-color: #ff2d4a;
  color: #fff;
  position: absolute;
  right: 0;
  text-align: center;
}
.buy-button.disable{
  background-color: #ccc;
}

.select-all {
  font-size: 30rpx;
}
.total-body {
  display: flex;
  align-items: baseline;
  font-size: 30rpx;
}
.total-foot {
  font-size: 24rpx;
  margin-top: 10rpx;
  color: #999;
}
.cart-empty {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  text-align: center;

  &-img {
    width: 180rpx;
    height: 180rpx;
    margin-bottom: 50rpx;
  }
  &-txt {
    margin-bottom: 50rpx;
    font-size: 28rpx;
  }
  &-nav {
    color: #ff2d4a;
  }
}
.product-count-eidt {
  display: flex;
  position: absolute;
  right: 0;
  bottom: 0;
  .count-min,
  .count-add {
    width: 60rpx;
    height: 50rpx;
    box-sizing: border-box;
    border: 4rpx solid #666;
    line-height: 50rpx;
    font-size: 28rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    &.disabled {
      border-color: #ccc;
      color: #ccc;
    }
  }
  .count-min {
    border-radius: 5rpx 0 0 5rpx;
  }
  .count-add {
    border-radius: 0 5rpx 5rpx 0;
  }
  .count-number {
    height: 50rpx;
    line-height: 50rpx;
    width: 80rpx;
    text-align: center;
    font-size: 24rpx;
  }
}
.iconfont-tap {
  font-family: 'iconfont' !important;
  font-size: 32rpx;
  font-style: normal;
  -webkit-font-smoothing: antialiased;

  min-width: 88rpx;
  min-height: 88rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
